// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZepelimAdm.Database;

namespace ZepelimAdm.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220325000318_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("ZepelimAdm.Business.Models.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.AcessoPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcessoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("PaginaId")
                        .HasColumnType("int");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AcessoId");

                    b.HasIndex("PaginaId");

                    b.ToTable("AcessoPagina");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.EmpresaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("EmpresaProduto");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.EmpresaUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EmpresaUser");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Icone")
                        .HasColumnType("longtext");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("PaginaPaiId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("URL")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Pagina");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("produto");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AcessoId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Acesso", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Empresa", "Empresa")
                        .WithMany("Acesso")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.AcessoPagina", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Acesso", "Acessos")
                        .WithMany()
                        .HasForeignKey("AcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZepelimAdm.Business.Models.Pagina", "Paginas")
                        .WithMany("AcessoPaginas")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acessos");

                    b.Navigation("Paginas");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.EmpresaProduto", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Empresa", "Empresa")
                        .WithMany("EmpresaProdutos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZepelimAdm.Business.Models.Produto", "Produto")
                        .WithMany("EmpresaProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.EmpresaUser", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Empresa", "Empresas")
                        .WithMany("EmpresaUsuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZepelimAdm.Business.Models.User", "Usuario")
                        .WithMany("EmpresaUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Pagina", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.User", b =>
                {
                    b.HasOne("ZepelimAdm.Business.Models.Acesso", "Acesso")
                        .WithMany("Usuario")
                        .HasForeignKey("AcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acesso");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Acesso", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Empresa", b =>
                {
                    b.Navigation("Acesso");

                    b.Navigation("EmpresaProdutos");

                    b.Navigation("EmpresaUsuarios");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Pagina", b =>
                {
                    b.Navigation("AcessoPaginas");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.Produto", b =>
                {
                    b.Navigation("EmpresaProdutos");
                });

            modelBuilder.Entity("ZepelimAdm.Business.Models.User", b =>
                {
                    b.Navigation("EmpresaUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
